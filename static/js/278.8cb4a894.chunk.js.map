{"version":3,"file":"static/js/278.8cb4a894.chunk.js","mappings":"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","sources":["redux/items/selectors.js","components/ListItems/Item.jsx","components/ListItems/ListItems.js"],"sourcesContent":["import { createSelector } from 'reselect'\r\n\r\nconst selectItemsState = state => state.Items;\r\n\r\nexport const selectItems = createSelector(\r\n    [selectItemsState],\r\n    (Items) => Items.items\r\n);\r\n\r\n\r\nObject.defineProperty(Array.prototype, 'chunk', {value: function(n) {\r\n    return Array.from(Array(Math.ceil(this.length/n)), (_,i)=>this.slice(i*n,i*n+n));\r\n}});\r\n\r\n\r\nexport const selectItemsChunk = createSelector(\r\n    [selectItems],\r\n    (items) => items.chunk(6) \r\n);\r\n\r\nexport const selectLoadingItems = createSelector(\r\n    [selectItemsState],\r\n    (Items) => Items.loadingItems\r\n);\r\n\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst Item = ({ item, history }) => {\r\n  if (item) {\r\n    var { kanji } = item;\r\n  }\r\n\r\n  return (\r\n    <ListItem>\r\n      <ListItemAvatar>\r\n        <Avatar>{item ? kanji.character : <Skeleton />}</Avatar>\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={item ? kanji.character : <Skeleton width=\"20%\" />}\r\n        secondary={item ? `Number strokes: ${kanji.stroke}` : <Skeleton width=\"80%\" />}\r\n      />\r\n      {item ? (\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            history.push(`/info/${kanji.character}`);\r\n          }}\r\n        >\r\n          Show more\r\n        </Button>\r\n      ) : (\r\n        <Skeleton width=\"30%\" />\r\n      )}\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport itemsActions from \"../../redux/items/actions\";\r\n\r\nimport {\r\n  selectLoadingItems,\r\n  selectItemsChunk\r\n} from \"../../redux/items/selectors\";\r\n\r\nimport Pagination from \"material-ui-flat-pagination\";\r\n\r\nimport Item from \"./Item\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst { getItems } = itemsActions;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nconst ListItemsPage = ({ items, getItems, loading, history }) => {\r\n  const classes = useStyles();\r\n\r\n  const [offset, setOffset] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [getItems]);\r\n\r\n  const handleClick = offset => {\r\n    setOffset(offset);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {items.length > 0 ? (\r\n        <Pagination\r\n          limit={10}\r\n          offset={offset}\r\n          total={items.length}\r\n          onClick={(e, offset) => handleClick(offset)}\r\n        />\r\n      ) : (\r\n        <Skeleton />\r\n      )}\r\n\r\n      {(loading || items.length === 0\r\n        ? Array.from(new Array(3))\r\n        : items[offset]\r\n      ).map((item, index) => (\r\n        <Item item={item} key={index} history={history}></Item>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  items: selectItemsChunk,\r\n  loading: selectLoadingItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getItems\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ListItemsPage);\r\n"],"names":["selectItemsState","state","Items","selectItems","createSelector","items","Object","defineProperty","Array","prototype","value","n","_this","from","Math","ceil","this","length","_","i","slice","selectItemsChunk","chunk","selectLoadingItems","loadingItems","_ref","item","history","kanji","_jsxs","ListItem","children","_jsx","ListItemAvatar","Avatar","character","Skeleton","ListItemText","primary","width","secondary","concat","stroke","Button","variant","size","color","onClick","push","getItems","itemsActions","useStyles","makeStyles","theme","root","maxWidth","backgroundColor","palette","background","paper","mapStateToProps","createStructuredSelector","loading","mapDispatchToProps","connect","classes","_useState","useState","_useState2","_slicedToArray","offset","setOffset","useEffect","List","className","Pagination","limit","total","e","handleClick","map","index","Item"],"sourceRoot":""}